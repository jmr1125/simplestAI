#include "main.h"
#include "network.h"
#include "train.h"
#include <iostream>
using namespace std;

int main() {
  network net(
      {1, 2, 3, 2, 1}, [](valT v) { return v; },
      [](valT) -> valT { return 1; });
  /*randomize net*/
  for (layer &x : net.layers) {
    for (auto &x : x.w.m) { // rand matrix
      for (auto &x : x) {
        x = (genvalT() - 0.5) * 4;
      }
    }
    for (auto &x : x.b.m) { // rand basis
      for (auto &x : x) {
        x = (genvalT() - 0.5) * 4;
      }
    }
  }
  int delta = 1;
    while ([delta](){if(fabs(delta) > 1e-5){return true;}return false;}) {
    valT x = genvalT();
    VvalT in{x};
    net.setInput(in);
    net.getV();
    delta = net.output[0] - x * 11.25;
    delta *= delta;
    cout << "delta: " << delta << endl;
    VvalT expect{x * 11.25};
    train(net, in, expect);
  }
}
